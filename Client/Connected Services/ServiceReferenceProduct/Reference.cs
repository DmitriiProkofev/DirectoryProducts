//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReferenceProduct {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceProduct.IProductServise")]
    public interface IProductServise {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServise/GetProducts", ReplyAction="http://tempuri.org/IProductServise/GetProductsResponse")]
        System.Collections.Generic.List<Core.Domain.ProductDTO> GetProducts(int groupProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServise/GetProducts", ReplyAction="http://tempuri.org/IProductServise/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Core.Domain.ProductDTO>> GetProductsAsync(int groupProductId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiseChannel : Client.ServiceReferenceProduct.IProductServise, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiseClient : System.ServiceModel.ClientBase<Client.ServiceReferenceProduct.IProductServise>, Client.ServiceReferenceProduct.IProductServise {
        
        public ProductServiseClient() {
        }
        
        public ProductServiseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Core.Domain.ProductDTO> GetProducts(int groupProductId) {
            return base.Channel.GetProducts(groupProductId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Core.Domain.ProductDTO>> GetProductsAsync(int groupProductId) {
            return base.Channel.GetProductsAsync(groupProductId);
        }
    }
}
